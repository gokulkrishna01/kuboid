#!/bin/bash -eu

function join_by { local IFS="$1"; shift; echo "$*"; }

STATUS_FILTERS=( )
AWK_FILTER='{print$1}' 
EXTRA_ARGS=${EXTRA_ARGS-}
UTILS=0

while getopts "spcCrfeEuUow" OPT
do
	case $OPT in
		s)
			STATUS_FILTERS+=(Successful)
			;;
		p)
			STATUS_FILTERS+=(Pending)
			;;
		C)
			STATUS_FILTERS+=(ContainerCreating)
			;;
		c)
			STATUS_FILTERS+=(Completed)
			;;
		r)
			STATUS_FILTERS+=(Running)
			;;
		f)
			STATUS_FILTERS+=(Failed)
			;;
		e)
			STATUS_FILTERS+=(Error)
			;;
		E)
			STATUS_FILTERS+=(ErrImagePull)
			;;
		u)
			STATUS_FILTERS+=(Unknown)
			;;
		U)
			UTILS=1
			;;
		o)
			STATUS_FILTERS+=(OOMKilled)
			;;
		w)
			AWK_FILTER='{print}'
			EXTRA_ARGS='-owide'
			;;
		*)
			echo "Usage $0 [-OPTIONS]"
			echo "Options:"
			echo "	-s	Filter pods for 'Successful'"
			echo "	-p	Filter pods for 'Pending'"
			echo "	-C	Filter pods for 'ContainerCreating'"
			echo "	-c	Filter pods for 'Completed'"
			echo "	-r	Filter pods for 'Running'"
			echo "	-f	Filter pods for 'Failed'"
			echo "	-e	Filter pods for 'Error'"
			echo "	-E	Filter pods for 'ErrImagePull'"
			echo "	-u	Filter pods for 'Unknown'"
			echo "	-o	Filter pods for 'OOMKilled'"
			echo "	-U	Display internal kubernetes pods"
			echo "	-w	Enable wide-mode display"
			exit 0
			;;
	esac
done

if [ ${#STATUS_FILTERS[@]} -eq 0 ]
then
	STATUS_REGEX=".*"
else
	STATUS_REGEX=" ($(join_by \| "${STATUS_FILTERS[@]}")) "
fi

HOST_REGEX=${@:$OPTIND:1}
[ -z "$HOST_REGEX" ] && HOST_REGEX=".*"

(
	kubectl get pods $EXTRA_ARGS | tail -n+2
	[ $UTILS -eq 1 ] && kubectl get pods -n workbench-util -a $EXTRA_ARGS | tail -n+2
) | grep -E "$STATUS_REGEX" | awk $AWK_FILTER | grep -E "$HOST_REGEX" | grep -v "STATUS"
