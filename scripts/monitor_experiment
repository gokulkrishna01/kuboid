#!/bin/bash -eu

AFL_TWEAKS=0
SAVE_LOGS=0

LOG_DIRECTORY=kuboid-logs
TASK_FILE=/dev/stdin

function usage
{
	cat <<END
$0 [-o LOG_DIRECTORY] [-f TASK_FILE] [ARGS_FOR_POD_CREATE]

Options:
	-l	The directory to save logs to (default: $LOG_DIRECTORY).
	-f	The file containing tasks to run (one per line). This will be given
		as the argument on the commandline to your kubernetes pod.
		Default: $TASK_FILE.

The rest of the args will be provided to the pod_create script during pod creation.
See pod_create -h for more info.
END
	exit 1
}

echo -n "" > /tmp/kuboid-$$.jobs

OPTERR=0
while getopts "l:f:h" OPT
do
	case $OPT in
		l)
			LOG_DIRECTORY=$OPTARG
			;;
		f)
			TASK_FILE=$OPTARG
			;;
		h)
			usage
			;;
		?)
			OPTIND=$(($OPTIND-1))
			break
			;;
	esac
done
shift $((OPTIND-1))

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

echo "[*] Logging to $LOG_DIRECTORY."
mkdir -p $LOG_DIRECTORY

function get_tasks
{
	echo "[*] Reading tasks from $TASK_FILE."
	timeout 5 cat /tmp/kuboid-$$.jobs $TASK_FILE | sort -u > /tmp/kuboid-$$.jobs~
	mv /tmp/kuboid-$$.jobs~ /tmp/kuboid-$$.jobs
}

if [ $(ls $LOG_DIRECTORY | wc -l) -gt 0 ]
then
	echo "[!] WARNING  |"
	echo "[!] WARNING  |"
	echo "[!] WARNING \\|/"
	echo "[!] WARNING  V"
	echo "[!] Your log directory ($LOG_DIRECTORY) is NOT EMPTY. This means that pods"
	echo "[!] with the same name as files in that directory will be assumed to have"
	echo "[!] already been run and WILL NOT BE RE-SCHEDULED. If you're resuming an"
	echo "[!] experiment, this is okay, but make sure to know what you're doing."
	echo "[!] WARNING  ^"
	echo "[!] WARNING /|\\"
	echo "[!] WARNING  |"
	echo "[!] WARNING  |"
fi

while true
do
	get_tasks
	echo "[*] Statistics:"
	TOTAL=$(cat /tmp/kuboid-$$.jobs | wc -l)
	COMPLETED=$(ls $LOG_DIRECTORY | wc -l)
	echo "[-] TOTAL JOBS:           $TOTAL"
	echo "[-] COMPLETED JOBS:       $COMPLETED"

	if [ $TOTAL -eq $COMPLETED ]
	then
		echo "[*] All done!"
		rm -f /tmp/kuboid-$$.jobs
		exit 0
	fi

	echo "[*] Making sure all pods are scheduled..."
	cat /tmp/kuboid-$$.jobs | $SCRIPT_DIR/pods_create -l $LOG_DIRECTORY "$@" || true
	echo "[*] Checking for completed pods..."
	echo "[*] $($SCRIPT_DIR/pod_names -c | $SCRIPT_DIR/pods_savelog $LOG_DIRECTORY | $SCRIPT_DIR/pods_delete | wc -l) jobs have just completed."

	echo "[*] Sleeping for 5 seconds..."
	sleep 5
done
